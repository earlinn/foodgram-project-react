version: '3.3'
services:

  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always
    env_file:
      - ./.env

  web:
    image: earlinn/foodgram:v.01
    restart: always
    volumes:
      - static_value:/app/static_backend/
      - media_value:/app/media/
      - dump_value:/app/dump/
    depends_on:
      - db

  frontend:
    image: earlinn/foodgram_frontend:v.01
    volumes:
      - ../frontend/:/app/result_build/
    env_file:
      - ./.env
    depends_on:
      - web

  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/static_backend/
      - media_value:/var/html/media/
    restart: always
    entrypoint: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - frontend

  certbot:
    container_name: service_certbot
    image: certbot/certbot:latest
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx

volumes:
  postgres_data:
  static_value:
  media_value:
  dump_value:
